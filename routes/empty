const express = require('express');
const axios = require('axios');
const Problem = require('../models/problems');
const User = require('../models/User');
const Submission = require('../models/Submission');
const router = express.Router();

const JUDGE0_API = 'https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true';

const headers = {
  'content-type': 'application/json',
  'X-RapidAPI-Key': '318eaefc8emsh8fe425db5f4a1d6p17cf33jsn2db7568e40ae', // Replace with your actual key
  'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com'
};

const languageMap = {
  cpp: 54,
  python: 71,
  java: 62,
  javascript: 63
};

router.post('/', async (req, res) => {
  const { code, language, problemId, email } = req.body;

  try {
    const user = await User.findOne({ email });
    if (!user) {
      return res.status(404).json({ message: 'User not found' });
    }

    const problem = await Problem.findById(problemId);
    const sampleCases = problem.sampleCases;

    const results = await Promise.all(sampleCases.map(async (testCase) => {
      const { input, output: expectedOutput } = testCase;

      const judgeRes = await axios.post(JUDGE0_API, {
        source_code: code,
        language_id: languageMap[language],
        stdin: input
      }, { headers });

      const actualOutput = judgeRes.data.stdout?.trim() || judgeRes.data.compile_output?.trim() || judgeRes.data.stderr?.trim();
      const status = judgeRes.data.status.description.includes("Accepted") && (actualOutput === expectedOutput.trim())
        ? 'Passed'
        : 'Failed';

      return {
        input,
        expectedOutput,
        actualOutput,
        status
      };
    }));

    const allPassed = results.every(r => r.status === "Passed");

    const submission = await Submission.create({
      user: user._id,
      problem: problemId,
      code,
      language,
      results
    });

    if (allPassed) {
      await User.updateOne(
        { email },
        { $addToSet: { submissions: problem.questionNumber } }
      );
    }

    res.json({
      message: 'Execution complete',
      results
    });

  } catch (err) {
    console.error(err);
    res.status(500).json({ message: 'Execution failed' });
  }
});

module.exports = router;
